import { ContractUnit } from "./contract-unit";
import { RentContractDues } from "./rent-contract-dues";
import { RentContractServiceModel } from "./rent-contract-services";
import { RentContractUnit } from "./rent-contract-units";
import { RentContractsMaintenance } from "./rent-contracts-maintenance";
import { Unit } from "./units";

export class RentContract {
  id: any;
  contractNumber!: string;
  rentMethodType!: number;
  period: any;
  createDate: any;
  startContractDate: any;
  endContractDate: any;
  calendarType!: number;
  whenTenentShouldPay!: number;
  tenantId: any;
  realestateId: any;
  vendorCommissionTypeId: any;  
  paymentMethodType!: number;
  advancedPayment: any;
  countOfInstallments: any;
  periodBetweenInstallment!: number;
  unitBookingId: any;
  unitPriceOfferId: any;
  tenantAccountId!: number;
  renewStartDate: any;
  renewEndDate: any;
  evacuationDate: any;
  contractStatus!: number;
  paymentTimeType!: number;
  servicesOwnerAccountId: any;
  totalTaxes: any;
  ownerTaxAccountId: any;
  ownerInsurranceAccountId: any;
  ownerVendorAccountId: any;
  enableMaintainance!: boolean;
  maintainanceCost: any;  
  ownerId: any;
  amountPerTime: any;  
  officeAccountId: any;
  ownerAccountId: any;
  currencyId: any;
  statmentTxt!: string;
  vendorId: any;
  commissionId: any;
  contractAcceptanceDate: any;
  masterRealestateId: any;
  buildingId: any;
  firstDueDate: any;
  contractMarketingType!: number;
  vendorAccountId: any;
  commissionTaxType: any;
  commissionTax: any;
  commissionRatio: any;
  settelmentServiceAccId:any;
  brokerageFee: any;
  securityDeposit: any;
  brokerAgeFeeType!: number;
  securityDeposiType!: number;
  contractDate: any;
  paidToDate: any;
  subRealestateId: any;
  totalArea: any;
  averagePriceOfMeter: any;
  totalAmountOfRent: any;
  totalInsurance: any;  
  totalWithTaxesAndInsurrance: any;
  paidAmount: any;
  totalServiceTaxes: any;
  totalAmountOfService: any;
  officeAmountPercentage: any;
  officeAmountValue: any;
  officeAmountType!: number;
  officeId: any;
  ownerDefferRevenueAccId: any;
  //ownerAccrudRevenueAccId: any;
  damagesFromInsurance: any;
  valueForTenant: any;
  valueForOwner: any;
  annualIncreaseRatio: any;
  annualIncreaseAmount: any;
  annualIncreaseChecked!: number;

  contractTenantRepresentativeId: any;
  parentContractId: any;
  isArchivedContract!: boolean;
  contractTypeId!: number;
  annualRentAmount: any;
  payOn!: number;
  contractPurpose: any;
  remainingAmount: any;
  unit: Unit[] = [];
  rentContractsMaintenance: RentContractsMaintenance[] = [];
  data: any;
  ownerNameAr: any;
  ownerNameEn: any;
  tenantNameAr: any;
  tenantNameEn: any;
  realestateNameAr: any;
  realestateNameEn: any;
  buildingNameAr: any;
  buildingNameEn: any;
  contractValueTotal: any;
  rentContractSettingId:any;
  contractSettingNameAr!:string;
  contractSettingNameEn!:string;
  unitsName!:string;
  unitsNameEn!:string;
  isRenew!:boolean;
  //  data: any;
  tenantRepresentativeId:any;
  rentContractsUnits:RentContractUnit[]=[];
  previousContractStatus:any;
  rentContractsDues:RentContractDues[]=[];
  rentContractsServices:RentContractServiceModel[]=[]

 
}
